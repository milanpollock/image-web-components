/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DrpGridGallery {
        "imageType": DrpGridGalleryImageType;
        "images": DrpGridGalleryImage[];
        "targetRowHeight": number;
    }
    interface DrpGridGallerySelectImage {
        /**
          * Height of the container surrounding the image
         */
        "height": string;
        /**
          * Source of the image
         */
        "imageSrc": string;
        /**
          * Source of the thumbnail image
         */
        "thumbnailSrc": string;
        /**
          * Transition time between image load and display
         */
        "transitionMilliseconds": number;
        /**
          * Width of the container surrounding the image
         */
        "width": string;
    }
    interface DrpGridGalleryZoomImage {
        /**
          * Height of the image
         */
        "height": string;
        /**
          * Source of the image
         */
        "imageSrc": string;
        /**
          * Source of the thumbnail image
         */
        "thumbnailSrc": string;
        /**
          * Width of the image
         */
        "width": string;
    }
    interface DrpProgressiveImage {
        /**
          * Height of the container surrounding the image.
         */
        "height": string;
        /**
          * Source of the image.
         */
        "imageSrc": string;
        /**
          * Source of the thumbnail image.
         */
        "thumbnailSrc": string;
        /**
          * Transition time between when the image is loaded and is displayed.
         */
        "transitionMilliseconds": number;
        /**
          * Width of the container surrounding the image.
         */
        "width": string;
    }
    interface DrpSlideGallery {
        "autoPlay": boolean;
        "disableKeyDown": boolean;
        "height": string;
        "images": string;
        "showIndex": boolean;
        "showPlayButton": boolean;
        "slideDuration": number;
        "startIndex": number;
    }
}
declare global {
    interface HTMLDrpGridGalleryElement extends Components.DrpGridGallery, HTMLStencilElement {
    }
    var HTMLDrpGridGalleryElement: {
        prototype: HTMLDrpGridGalleryElement;
        new (): HTMLDrpGridGalleryElement;
    };
    interface HTMLDrpGridGallerySelectImageElement extends Components.DrpGridGallerySelectImage, HTMLStencilElement {
    }
    var HTMLDrpGridGallerySelectImageElement: {
        prototype: HTMLDrpGridGallerySelectImageElement;
        new (): HTMLDrpGridGallerySelectImageElement;
    };
    interface HTMLDrpGridGalleryZoomImageElement extends Components.DrpGridGalleryZoomImage, HTMLStencilElement {
    }
    var HTMLDrpGridGalleryZoomImageElement: {
        prototype: HTMLDrpGridGalleryZoomImageElement;
        new (): HTMLDrpGridGalleryZoomImageElement;
    };
    interface HTMLDrpProgressiveImageElement extends Components.DrpProgressiveImage, HTMLStencilElement {
    }
    var HTMLDrpProgressiveImageElement: {
        prototype: HTMLDrpProgressiveImageElement;
        new (): HTMLDrpProgressiveImageElement;
    };
    interface HTMLDrpSlideGalleryElement extends Components.DrpSlideGallery, HTMLStencilElement {
    }
    var HTMLDrpSlideGalleryElement: {
        prototype: HTMLDrpSlideGalleryElement;
        new (): HTMLDrpSlideGalleryElement;
    };
    interface HTMLElementTagNameMap {
        "drp-grid-gallery": HTMLDrpGridGalleryElement;
        "drp-grid-gallery-select-image": HTMLDrpGridGallerySelectImageElement;
        "drp-grid-gallery-zoom-image": HTMLDrpGridGalleryZoomImageElement;
        "drp-progressive-image": HTMLDrpProgressiveImageElement;
        "drp-slide-gallery": HTMLDrpSlideGalleryElement;
    }
}
declare namespace LocalJSX {
    interface DrpGridGallery {
        "imageType"?: DrpGridGalleryImageType;
        "images"?: DrpGridGalleryImage[];
        "targetRowHeight"?: number;
    }
    interface DrpGridGallerySelectImage {
        /**
          * Height of the container surrounding the image
         */
        "height"?: string;
        /**
          * Source of the image
         */
        "imageSrc"?: string;
        /**
          * When the image is selected
         */
        "onDrp-grid-gallery-image-selected"?: (event: CustomEvent<{
    imageSrc: string;
  }>) => void;
        /**
          * Source of the thumbnail image
         */
        "thumbnailSrc"?: string;
        /**
          * Transition time between image load and display
         */
        "transitionMilliseconds"?: number;
        /**
          * Width of the container surrounding the image
         */
        "width"?: string;
    }
    interface DrpGridGalleryZoomImage {
        /**
          * Height of the image
         */
        "height"?: string;
        /**
          * Source of the image
         */
        "imageSrc"?: string;
        /**
          * When the image is clicked
         */
        "onDrp-grid-gallery-image-clicked"?: (event: CustomEvent<{
    imageSrc: string;
  }>) => void;
        /**
          * Source of the thumbnail image
         */
        "thumbnailSrc"?: string;
        /**
          * Width of the image
         */
        "width"?: string;
    }
    interface DrpProgressiveImage {
        /**
          * Height of the container surrounding the image.
         */
        "height"?: string;
        /**
          * Source of the image.
         */
        "imageSrc"?: string;
        /**
          * Source of the thumbnail image.
         */
        "thumbnailSrc"?: string;
        /**
          * Transition time between when the image is loaded and is displayed.
         */
        "transitionMilliseconds"?: number;
        /**
          * Width of the container surrounding the image.
         */
        "width"?: string;
    }
    interface DrpSlideGallery {
        "autoPlay"?: boolean;
        "disableKeyDown"?: boolean;
        "height"?: string;
        "images"?: string;
        "showIndex"?: boolean;
        "showPlayButton"?: boolean;
        "slideDuration"?: number;
        "startIndex"?: number;
    }
    interface IntrinsicElements {
        "drp-grid-gallery": DrpGridGallery;
        "drp-grid-gallery-select-image": DrpGridGallerySelectImage;
        "drp-grid-gallery-zoom-image": DrpGridGalleryZoomImage;
        "drp-progressive-image": DrpProgressiveImage;
        "drp-slide-gallery": DrpSlideGallery;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "drp-grid-gallery": LocalJSX.DrpGridGallery & JSXBase.HTMLAttributes<HTMLDrpGridGalleryElement>;
            "drp-grid-gallery-select-image": LocalJSX.DrpGridGallerySelectImage & JSXBase.HTMLAttributes<HTMLDrpGridGallerySelectImageElement>;
            "drp-grid-gallery-zoom-image": LocalJSX.DrpGridGalleryZoomImage & JSXBase.HTMLAttributes<HTMLDrpGridGalleryZoomImageElement>;
            "drp-progressive-image": LocalJSX.DrpProgressiveImage & JSXBase.HTMLAttributes<HTMLDrpProgressiveImageElement>;
            "drp-slide-gallery": LocalJSX.DrpSlideGallery & JSXBase.HTMLAttributes<HTMLDrpSlideGalleryElement>;
        }
    }
}
